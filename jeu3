#jeu N°3
import pygame, sys
from pygame.locals import *
import time
from random import *
from annexe import *

def casse_brique(couleur, difficulte = 0):
    pygame.init()
    pygame.key.set_repeat(11)

    impact = pygame.font.SysFont('Impact', 60)

    pygame.display.set_caption("Test_Jeux")
    fenetre = pygame.display.set_mode((1500, 1000))
    position_fenetre = fenetre.get_rect()

    mode = [1]

    class Brique:
        def __init__(self, hauteur, longueur, x, y, couleur):
            self.hauteur = hauteur
            self.longueur = longueur
            self.x = x
            self.y = y
            self.couleur = couleur
            self.rectangle = pygame.draw.rect(fenetre, self.couleur, (self.x, self.y, self.longueur, self.hauteur))
           
            
        def apparition(self): 
            pygame.draw.rect(fenetre, self.couleur, (self.x, self.y, self.longueur, self.hauteur))
            
            
    liste_brique = []
    for x in range(60):
        brique = Brique(50, 90, 260 + (x % 10)*95 , 50 + (x // 10)*55, (250, 100, 100))
        liste_brique.append(brique)

    x_barre = [700]
    y_barre = [900]
    x_balle = [750, 750]
    y_balle = [870]
    pas_deplacement = 7 
    dx = 2+difficulte
    dy = 2+difficulte
    vie = 3-difficulte
    fenetre.fill([250, 250, 250])
    pygame.draw.rect(fenetre, (0, 0, 0), (249, 0, 1, 1000))
    pygame.draw.rect(fenetre, (0, 0, 0), (1215, 0, 1, 1000))
    text = impact.render("vie :", True, (0,0,0))
    fenetre.blit(text, (50,100))
    for x in range(vie):
        pygame.draw.rect(fenetre, (0, 0, 0), (140+20*x, 100, 10, 40))
    
    while True:
        
        for brique in liste_brique:
            brique.apparition()
            
        barre_joueur = pygame.draw.rect(fenetre, (250, 250, 250), (x_barre[0], y_barre[0], 100 - 20*difficulte, 20)) #gomme la plate forme        
       
        for event in pygame.event.get(): #quitter
            if event.type == pygame.QUIT:
                pygame.display.quit()
                sys.exit()
                
            if event.type == KEYDOWN: #deplacement
                if event.key == K_d or event.key == K_RIGHT:
                    if x_barre[0] < 1110:
                        x_barre[0] += pas_deplacement
                               
                if event.key == K_q or event.key == K_LEFT:
                    if x_barre[0] > 256:
                        x_barre[0] -= pas_deplacement
                        
        barre_joueur = pygame.draw.rect(fenetre, (100, 100, 250), (x_barre[0], y_barre[0], 100 - 20*difficulte, 20)) #dessine la plate forme
                        
        if x_balle[0] >= 1215 or x_balle[0] <= 250: #collision latérale
            dx = -dx
        if y_balle[0] <= 0:
            dy = -dy
            
        for brique in liste_brique:
            if brique.rectangle.collidepoint(x_balle[0] + 10, y_balle[0]): #collision balle/briques
                dx = dx
                dy = -dy
                pygame.draw.rect(fenetre, (250, 250, 250), (brique.x, brique.y, brique.longueur, brique.hauteur)) #gomme
                liste_brique.remove(brique)
                
            elif brique.rectangle.collidepoint(x_balle[0] - 10, y_balle[0]):
                dx = dx
                dy = -dy
                pygame.draw.rect(fenetre, (250, 250, 250), (brique.x, brique.y, brique.longueur, brique.hauteur)) #gomme
                liste_brique.remove(brique)
                
            elif brique.rectangle.collidepoint(x_balle[0], y_balle[0] + 10):
                dx = dx
                dy = -dy
                pygame.draw.rect(fenetre, (250, 250, 250), (brique.x, brique.y, brique.longueur, brique.hauteur)) #gomme
                liste_brique.remove(brique)
                
            elif brique.rectangle.collidepoint(x_balle[0], y_balle[0] - 10):
                dx = dx
                dy = -dy
                pygame.draw.rect(fenetre, (250, 250, 250), (brique.x, brique.y, brique.longueur, brique.hauteur)) #gomme
                liste_brique.remove(brique)
        
        if dx < 0:
            if dx > (-0.5):
                dx -= 1
        else:
            if dx < 0.5:
                dx += 1
            
        pygame.draw.circle(fenetre, (250, 250, 250), (x_balle[0],y_balle[0]), 15) #gomme
        
        if barre_joueur.collidepoint(x_balle[0] + 10, y_balle[0]): # collison balle/plate forme
            if x_balle[0] > x_balle[1]:
                dy = -dy
                dx = (x_balle[0] - x_barre[0]) * 0.01 * dx
            elif x_balle[0] < x_balle[1]:
                dy = -dy
                dx = ((x_barre[0] + 100) - x_balle[0]) * 0.01 * dx
            
            else:
                dy = -dy
                
        elif barre_joueur.collidepoint(x_balle[0] - 10, y_balle[0]):
            if x_balle[0] > x_balle[1]:
                dy = -dy
                dx = (x_balle[0] - x_barre[0]) * 0.01 * dx
            elif x_balle[0] < x_balle[1]:
                dy = -dy
                dx = ((x_barre[0] + 100) - x_balle[0]) * 0.01 * dx
            
            else:
                dy = -dy
        elif barre_joueur.collidepoint(x_balle[0], y_balle[0] + 10):
            if x_balle[0] > x_balle[1]:
                dy = -dy
                dx = (x_balle[0] - x_barre[0]) * 0.01 * dx
            elif x_balle[0] < x_balle[1]:
                dy = -dy
                dx = ((x_barre[0] + 100) - x_balle[0]) * 0.01 * dx
            
            else:
                dy = -dy      
        elif barre_joueur.collidepoint(x_balle[0], y_balle[0] - 10):
            if x_balle[0] > x_balle[1]:
                dy[0] = -dy[0]
                dx[0] = (x_balle[0] - x_barre[0]) * 0.01 * dx
            elif x_balle[0] < x_balle[1]:
                dy = -dy
                dx = ((x_barre[0] + 100) - x_balle[0]) * 0.01 * dx
            
            else:
                dy = -dy            
            
        x_balle[1] = x_balle[0]
        x_balle[0] += dx
        y_balle[0] -= dy
        
        pygame.draw.circle(fenetre, couleur, (x_balle[0],y_balle[0]), 15) # dessine la balle
        pygame.draw.rect(fenetre, (0, 0, 0), (249, 0, 1, 1000)) # dessine les bordures
        pygame.draw.rect(fenetre, (0, 0, 0), (1215, 0, 1, 1000))
        
        if y_balle[0] - 18 > 1000: #sortie du cadre
            x_balle[0] = x_barre[0] + 50
            y_balle[0] = 870
            pygame.draw.circle(fenetre ,couleur ,(x_balle[0],y_balle[0]),15) # dessine la balle
            pygame.draw.rect(fenetre, (250, 250, 250), (140+20*(vie-1), 100, 10, 40)) # efface une vie
            pygame.display.flip()
            vie -= 1
            dx = 2+difficulte
            dy = 2+difficulte
            time.sleep(0.5)
            
        if vie == 0:
            return defaite()
        
        if liste_brique == []:
            return victoire(vie * (difficulte*2 +1))
            
        
        pygame.display.flip()
            
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.display.quit()
                sys.exit()
        
        pygame.display.flip()
